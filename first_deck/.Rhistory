BISWEB_EERDATAFLOW.1388096331261 <- read.csv("C:/Users/cberthillon/Downloads/BISWEB_EERDATAFLOW-1388096331261.csv", quote="")
View(BISWEB_EERDATAFLOW.1388096331261)
BISWEB_EERDATAFLOW.1388096331261 <- read.csv2("C:/Users/cberthillon/Downloads/BISWEB_EERDATAFLOW-1388096331261.csv", quote="")
View(BISWEB_EERDATAFLOW.1388096331261)
View(BISWEB_EERDATAFLOW.1388096331261)
BIS <- read.csv2("C:/Users/cberthillon/Downloads/BISWEB_EERDATAFLOW-1388096331261.csv", quote="")
View(BISWEB_EERDATAFLOW.1388096331261)
View(BISWEB_EERDATAFLOW.1388096331261)
View(BISWEB_EERDATAFLOW.1388096331261)
install.packages("googleVis")
library("googleVis", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.0")
> score=read.csv(file.choose(),header=TRUE)
myFile=read.csv(file.choose(),header=TRUE)
attach(myFile)
plot(myFile)
log(myFile)
table(myFile)
head(myFile)
list.files(R.home())
list.dirs(path = ".", full.names = TRUE, recursive = TRUE)
list.dirs()
x<-matrix(1:6,2,3)
nrow(x)
summary (x)
x
for(i in seq_len(nrow(x))){
for (j in seq_len(ncol(x))){
print (x[i,j])
}
}
add2<-function(x,y){
x+y
}
3+5
3,4
add2(10,5)
add2(10,5)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,12)
above<-function(x,n=10){
use<-x>n
x[use]
}
x<-1:20
above(x)
columnmean<-function(y, removeNA=TRUE){
nc<-ncol(y) ## calculate the number of column
means<-numeric(nc) ##numeric vector equals to the lenght if nc
for(i in 1:nc){
means [i]<-mean(y[,1], ra.rm=removeNA)
}
means ##return fonction
}
columnmean(airquality) ###airquality dataset
airquality
columnmean<-function(y, removeNA=TRUE){
nc<-ncol(y) ## calculate the number of column
means<-numeric(nc) ##numeric vector equals to the lenght if nc
for(i in 1:nc){
means [i]<-mean(y[,1], ra.rm=removeNA)
}
means ##return fonction
}
columnmean(airquality) ###airquality dataset
columnmean(airquality) ###airquality dataset
columnmean(airquality, FALSE)
args(x)
args(function)
args(columnmean)
columnmean<-function(y, na.rm=TRUE){
nc<-ncol(y) ## calculate the number of column
means<-numeric(nc) ##numeric vector equals to the lenght if nc
for(i in 1:nc){
means [i]<-mean(y[,1], ra.rm=TRUE)
}
means ##return fonction
}
columnmean(airquality) ###airquality dataset
as.numeric(airquality)
install.packages("XLConnect")
library("XLConnect", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.0")
demo(package = "XLConnect"
)
addImage
require(devtools)
require(devtools)
install.packages("XLConnect")
library("XLConnect", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
library ( XLConnect )
library ( XLConnect )
library(rJava)
library("rJava", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
library(rJava)
require(XLConnect)
library ( XLConnect )
library("xlsx", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
library("XLConnect", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
library(xlsx)
library(xlsx)
library(manipulate)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(manipulate) manipulate(plot(1:x), x = slider(1,
100))
library(manipulate) manipulate(plot(1:x), x = slider(1,100))
library(manipulate)
manipulate(plot(1:x), x = slider(1,100))
install.packages("devtools")
library("devtools", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
install.packages("devtools")
install.github('slidify','ramnathv')
devtools
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="C:/Users/cberthillon/Documents/R/win-library/3.1")
library("devtools", lib.loc="~/R/win-library/3.1")
install.packages(c("Formula", "httr", "jsonlite", "Rcpp", "RCurl", "RJSONIO", "shiny", "XLConnect", "xlsx"))
library(manipulate)
manipulate(plot(1:x), x = slider(1,100))
devtools
library("devtools", lib.loc="~/R/win-library/3.1")
install.github('slidify','ramnathv')
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
setwd("C:/Users/cberthillon/018.Coursera/005.DevelopingDataProducts/004.Project")
author("first_deck")
library(slidify)
author("first_deck")
---
title       : CB
subtitle    : first deck
author      : Charles Berthillon
job         :
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
layout: slide
---
{{{ content }}}
<footer class = 'logo'>
<img src = 'path/to/logo'></img>
</footer>
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
